package com.google.tanbarinimport android.support.v7.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport com.google.android.gms.maps.CameraUpdateFactoryimport com.google.android.gms.maps.GoogleMapimport com.google.android.gms.maps.OnMapReadyCallbackimport com.google.android.gms.maps.SupportMapFragmentimport com.google.android.gms.maps.model.LatLngimport com.google.android.gms.maps.model.Markerimport com.google.android.gms.maps.model.MarkerOptionsimport com.google.android.gms.maps.GoogleMap.OnMarkerClickListenerimport com.google.android.gms.maps.model.BitmapDescriptorFactoryimport com.google.android.gms.maps.model.BitmapDescriptorimport kotlin.math.logclass MapsActivity : AppCompatActivity(), OnMapReadyCallback {    var MapsActivity =MapsActivity()    private lateinit var mMap: GoogleMap    private val sydney = LatLng(40.0, 133.0)    override fun onMapReady(googleMap: GoogleMap) {        mMap.addMarker(MarkerOptions().position(sydney).title("しどにー"))        mMap = googleMap        Log.d("maita", "dataaaaa")        // Add a marker in Sydney and move the camera        //markerOptions.position(sydney)        //var markerOptions = MarkerOptions()        //markerOptions.title("Marker in Sydney")        //var marker1 = mMap.addMarker(markerOptions)        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(sydney, 15F))    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_maps)        Log.d("aaaa", "dataaaaaaa")        // Obtain the SupportMapFragment and get notified when the map is ready to be used.        mMap.addMarker(MarkerOptions().position(sydney).title("しどにー"))        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(sydney, 15F))        val mapFragment = supportFragmentManager            .findFragmentById(R.id.map) as SupportMapFragment        mapFragment.getMapAsync(this)    }    /**     * Manipulates the map once available.     * This callback is triggered when the map is ready to be used.     * This is where we can add markers or lines, add listeners or move the camera. In this case,     * we just add a marker near Sydney, Australia.     * If Google Play services is not installed on the device, the user will be prompted to install     * it inside the SupportMapFragment. This method will only be triggered once the user has     * installed Google Play services and returned to the app.     */        /*mMap.addMarker(MarkerOptions().position(sydney).title("Marker in Sydney"))        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney))        var markerOptions = MarkerOptions()        markerOptions.position(sydney)        markerOptions.title("Marker in Sydney")        var marker1 = mMap.addMarker(markerOptions)        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney))*/    }